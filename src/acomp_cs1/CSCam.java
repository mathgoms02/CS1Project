/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package acomp_cs1;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.util.HashSet;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.MatOfByte;
import org.opencv.highgui.HighGui;
import org.opencv.videoio.VideoCapture;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.core.Core;
/**
 *
 * @author matgo
 */
public final class CSCam extends javax.swing.JInternalFrame {
  
    private DaemonThread myThread = null;
    int count = 0;
    VideoCapture webSource = null;
    
    Mat frame = new Mat();
    MatOfByte mem = new MatOfByte();
    
    
    class DaemonThread implements Runnable{
        protected volatile boolean runnable = false;
        
        @Override
        public void run(){
            synchronized(this){
                while(runnable){
                    if(webSource.grab()){
                        try{
                            webSource.retrieve(frame);
                            Imgcodecs.imencode(".bmp", frame, mem);
                            Image im = ImageIO.read(new ByteArrayInputStream(mem.toArray()));
                            
                            BufferedImage buff = (BufferedImage) im;
                            Graphics g = jPanel1.getGraphics();
                            
                            if (g.drawImage(buff, 0, 0, getWidth(), getHeight() -150,0,0, buff.getWidth(), buff.getHeight(), null));
                            
                            if(runnable == false){
                                System.out.println("Going to wait()");
                                this.wait();
                            }
                        }
                        catch(Exception ex){
                            System.out.println("Error"+ex);
                        }
                    }
                }
            }
        }
    }


    
    
    public void Cam(){
        
            webSource = new VideoCapture(0); //captura de video da camera padr√£o do computador
        myThread = new DaemonThread();
            Thread t = new Thread(myThread);
            t.setDaemon(true);
            myThread.runnable = true;
            t.start();
              //  btStart.setEnabled(false);
}
    
    public void stopCam(){
        myThread.runnable = false;
        webSource.release();
    }
    
    
    public CSCam() {
        initComponents(); 
        //stopCam();
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        Cam();
        
    }
    
    
    

        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        btSnap = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 378, Short.MAX_VALUE)
        );

        btSnap.setText("{imagem de camera}");
        btSnap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSnapActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(639, Short.MAX_VALUE)
                .addComponent(btSnap)
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(btSnap, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSnapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSnapActionPerformed
        int returnVal = jFileChooser1.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION){
            File file = jFileChooser1.getSelectedFile(); //pega o caminho do Save Dialog
            Imgcodecs.imwrite(file.getPath(), frame);       //salva a imagem para tal caminho
        }else{
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_btSnapActionPerformed


    
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSnap;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
