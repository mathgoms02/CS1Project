/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package acomp_cs1;

import java.awt.Image;
import java.awt.Graphics;
import javax.swing.ImageIcon;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
//import java.util.ArrayList;

/**
 *
 * @author matgo
 */
public class Cadastro extends javax.swing.JInternalFrame {
    String driver = "com.mysql.cj.jdbc.Driver"; //drive de conexao com o SQL
    String url = "jdbc:mysql://localhost:3306/cs1_control"; //porta padrao pro sql e da agenda
    String user = "root";
    String password = "microondas123@";
    
    /**
     * Creates new form Cadastro
     */
    public Cadastro() {
        initComponents();
        CadasterPlus.setVisible(false);
        TFAB.setVisible(false);
        
    }

        public String getAcompanhamento_CS1(){
            String resultado = "";
            try {
            //Registrar o driver
            Class.forName(driver);
            String query = "SELECT * FROM acompanhamento_CS1";
                try {
                    //Estabelecer conexão
                    Connection con = DriverManager.getConnection(url, user, password);
                    // Criando o objeto statement - usado para executar consultas
                    Statement st = con.createStatement();
                    // O método executeQuery retorna um objeto ResultSet object o qual 
                    //representa o resultado da consulta.
                    ResultSet rs = st.executeQuery(query);

                    int colNum = rs.getMetaData().getColumnCount();
                    while (rs.next()) {
                            for (int i=1; i<=colNum; i++)
                            {
                                    resultado += rs.getString(i)+"\n";
                            }
                            resultado += "---------------\n";
                    }
                    rs.close();
                    st.close();
                    con.close();

                } catch (SQLException e) {
                        System.out.println(e);
                } 
            } catch (ClassNotFoundException e) {
                    System.out.println(e);
            }


            return resultado;
        }
        private int cadastrar(int peça, int qtd, int qtdNOK, int problema, int re, int turno1, int turno2) {
            int resultado=0;
            DateTimeFormatter data = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            DateTimeFormatter hora = DateTimeFormatter.ofPattern("HH:mm");
            try {
                Class.forName(driver);
                String query = "INSERT INTO `cs1_control`.`acompanhamento_cs1` (`hora`, `data`, `peça`, `qtd`, `qtdNOK`, `problema`, `RE`, `turnoInsp`, `turnoFabr`) VALUES "
                                + "('"+hora.format(LocalDateTime.now())+"', '"+data.format(LocalDateTime.now())+"', "+peça+", "+qtd+", "+qtdNOK+", "+problema+", "+re+", "+turno1+", "+turno2+");";
                try {
                    Connection con = DriverManager.getConnection(url, user, password);
                    Statement st = con.createStatement();
                    resultado = st.executeUpdate(query);
                    st.close();
                    con.close();

                } catch (SQLException e) {
                    System.out.println(e);
                }

            } catch (ClassNotFoundException e) {
                System.out.println(e);
            }
            return resultado;
            }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoTurno = new javax.swing.ButtonGroup();
        grupoProblema = new javax.swing.ButtonGroup();
        grp1 = new javax.swing.ButtonGroup();
        grp2 = new javax.swing.ButtonGroup();
        grp3 = new javax.swing.ButtonGroup();
        grp4 = new javax.swing.ButtonGroup();
        grp5 = new javax.swing.ButtonGroup();
        grupoTurnoF = new javax.swing.ButtonGroup();
        ImageIcon icon = new ImageIcon(getClass().getResource("/imagens/fundoBlack.png"));
        Image image = icon.getImage();
        jDesktopPane1 = new javax.swing.JDesktopPane(){

            public void paintComponent(Graphics g){
                g.drawImage(image, 0, 0, getWidth(), getHeight(), this);
            }

        };
        txtT2 = new javax.swing.JRadioButton();
        txtT1 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        txtRE = new javax.swing.JTextField();
        txtT3 = new javax.swing.JRadioButton();
        txtPeca = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtQtd = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtQtdNOK = new javax.swing.JTextField();
        CadasterPlus = new javax.swing.JInternalFrame();
        txtQTDNOK1 = new javax.swing.JTextField();
        txtPROBLEMA1 = new javax.swing.JTextField();
        txtQTDNOK2 = new javax.swing.JTextField();
        txtPROBLEMA2 = new javax.swing.JTextField();
        txtQTDNOK3 = new javax.swing.JTextField();
        txtPROBLEMA3 = new javax.swing.JTextField();
        txtQTDNOK4 = new javax.swing.JTextField();
        txtPROBLEMA4 = new javax.swing.JTextField();
        txtQTDNOK5 = new javax.swing.JTextField();
        txtPROBLEMA5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnOK = new javax.swing.JButton();
        TURNO1_1 = new javax.swing.JRadioButton();
        TURNO1_2 = new javax.swing.JRadioButton();
        TURNO1_3 = new javax.swing.JRadioButton();
        TURNO2_1 = new javax.swing.JRadioButton();
        TURNO2_2 = new javax.swing.JRadioButton();
        TURNO2_3 = new javax.swing.JRadioButton();
        TURNO3_1 = new javax.swing.JRadioButton();
        TURNO3_2 = new javax.swing.JRadioButton();
        TURNO3_3 = new javax.swing.JRadioButton();
        TURNO4_1 = new javax.swing.JRadioButton();
        TURNO4_2 = new javax.swing.JRadioButton();
        TURNO4_3 = new javax.swing.JRadioButton();
        TURNO5_1 = new javax.swing.JRadioButton();
        TURNO5_2 = new javax.swing.JRadioButton();
        TURNO5_3 = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        TFAB = new javax.swing.JInternalFrame();
        jLabel6 = new javax.swing.JLabel();
        t1 = new javax.swing.JRadioButton();
        t2 = new javax.swing.JRadioButton();
        t3 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Cadastro");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconeM.jpeg"))); // NOI18N
        setMinimumSize(new java.awt.Dimension(734, 370));
        setPreferredSize(new java.awt.Dimension(734, 370));

        grupoTurno.add(txtT2);
        txtT2.setForeground(new java.awt.Color(255, 255, 255));
        txtT2.setText("2Turno");

        grupoTurno.add(txtT1);
        txtT1.setForeground(new java.awt.Color(255, 255, 255));
        txtT1.setText("1Turno");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Qtd NOK Total:");

        txtRE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtREActionPerformed(evt);
            }
        });

        grupoTurno.add(txtT3);
        txtT3.setForeground(new java.awt.Color(255, 255, 255));
        txtT3.setText("3Turno");

        txtPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPecaActionPerformed(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("RE:");

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Peça:");

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("TURNO DA INSPEÇÃO");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Qtd:");

        txtQtdNOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtdNOKActionPerformed(evt);
            }
        });

        CadasterPlus.setClosable(true);
        CadasterPlus.setLayer(10);
        CadasterPlus.setVisible(true);

        jLabel7.setText("qtdNOK");

        jLabel8.setText("Problema");

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        grp1.add(TURNO1_1);
        TURNO1_1.setText("1");

        grp1.add(TURNO1_2);
        TURNO1_2.setText("2");

        grp1.add(TURNO1_3);
        TURNO1_3.setText("3");
        TURNO1_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TURNO1_3ActionPerformed(evt);
            }
        });

        grp2.add(TURNO2_1);
        TURNO2_1.setText("1");

        grp2.add(TURNO2_2);
        TURNO2_2.setText("2");

        grp2.add(TURNO2_3);
        TURNO2_3.setText("3");

        grp3.add(TURNO3_1);
        TURNO3_1.setText("1");

        grp3.add(TURNO3_2);
        TURNO3_2.setText("2");

        grp3.add(TURNO3_3);
        TURNO3_3.setText("3");

        grp4.add(TURNO4_1);
        TURNO4_1.setText("1");

        grp4.add(TURNO4_2);
        TURNO4_2.setText("2");

        grp4.add(TURNO4_3);
        TURNO4_3.setText("3");

        grp5.add(TURNO5_1);
        TURNO5_1.setText("1");

        grp5.add(TURNO5_2);
        TURNO5_2.setText("2");

        grp5.add(TURNO5_3);
        TURNO5_3.setText("3");

        jLabel4.setText("Turno Fabricado");

        javax.swing.GroupLayout CadasterPlusLayout = new javax.swing.GroupLayout(CadasterPlus.getContentPane());
        CadasterPlus.getContentPane().setLayout(CadasterPlusLayout);
        CadasterPlusLayout.setHorizontalGroup(
            CadasterPlusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CadasterPlusLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CadasterPlusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(CadasterPlusLayout.createSequentialGroup()
                        .addComponent(txtQTDNOK5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtPROBLEMA5))
                    .addGroup(CadasterPlusLayout.createSequentialGroup()
                        .addComponent(txtQTDNOK4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtPROBLEMA4))
                    .addGroup(CadasterPlusLayout.createSequentialGroup()
                        .addComponent(txtQTDNOK3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtPROBLEMA3))
                    .addGroup(CadasterPlusLayout.createSequentialGroup()
                        .addComponent(txtQTDNOK2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtPROBLEMA2))
                    .addGroup(CadasterPlusLayout.createSequentialGroup()
                        .addGroup(CadasterPlusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtQTDNOK1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(CadasterPlusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(txtPROBLEMA1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(CadasterPlusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CadasterPlusLayout.createSequentialGroup()
                        .addComponent(TURNO1_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TURNO1_2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TURNO1_3))
                    .addGroup(CadasterPlusLayout.createSequentialGroup()
                        .addComponent(TURNO3_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TURNO3_2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TURNO3_3))
                    .addGroup(CadasterPlusLayout.createSequentialGroup()
                        .addComponent(TURNO4_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TURNO4_2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TURNO4_3))
                    .addGroup(CadasterPlusLayout.createSequentialGroup()
                        .addComponent(TURNO2_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TURNO2_2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TURNO2_3))
                    .addComponent(jLabel4)
                    .addGroup(CadasterPlusLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(btnOK))
                    .addGroup(CadasterPlusLayout.createSequentialGroup()
                        .addComponent(TURNO5_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TURNO5_2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TURNO5_3)))
                .addGap(18, 18, 18))
        );
        CadasterPlusLayout.setVerticalGroup(
            CadasterPlusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CadasterPlusLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(CadasterPlusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CadasterPlusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQTDNOK1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPROBLEMA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TURNO1_1)
                    .addComponent(TURNO1_2)
                    .addComponent(TURNO1_3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CadasterPlusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CadasterPlusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TURNO2_1)
                        .addComponent(TURNO2_2)
                        .addComponent(TURNO2_3))
                    .addGroup(CadasterPlusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtQTDNOK2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPROBLEMA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CadasterPlusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CadasterPlusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TURNO3_1)
                        .addComponent(TURNO3_2)
                        .addComponent(TURNO3_3))
                    .addGroup(CadasterPlusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtQTDNOK3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPROBLEMA3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CadasterPlusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TURNO4_3)
                    .addComponent(TURNO4_2)
                    .addComponent(TURNO4_1)
                    .addComponent(txtPROBLEMA4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQTDNOK4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CadasterPlusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TURNO5_3)
                    .addComponent(TURNO5_2)
                    .addComponent(TURNO5_1)
                    .addComponent(txtPROBLEMA5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQTDNOK5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(btnOK)
                .addGap(15, 15, 15))
        );

        TFAB.setClosable(true);
        TFAB.setVisible(true);

        jLabel6.setText("Turno Fabricado:");

        grupoTurnoF.add(t1);
        t1.setText("T1");

        grupoTurnoF.add(t2);
        t2.setText("T2");

        grupoTurnoF.add(t3);
        t3.setText("T3");

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TFABLayout = new javax.swing.GroupLayout(TFAB.getContentPane());
        TFAB.getContentPane().setLayout(TFABLayout);
        TFABLayout.setHorizontalGroup(
            TFABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TFABLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TFABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(TFABLayout.createSequentialGroup()
                        .addComponent(t1)
                        .addGap(18, 18, 18)
                        .addComponent(t2)
                        .addGap(18, 18, 18)
                        .addComponent(t3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TFABLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        TFABLayout.setVerticalGroup(
            TFABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TFABLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TFABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t1)
                    .addComponent(t2)
                    .addComponent(t3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jDesktopPane1.setLayer(txtT2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtT1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtRE, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtT3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtPeca, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnSalvar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtQtd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DRAG_LAYER);
        jDesktopPane1.setLayer(txtQtdNOK, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(CadasterPlus, javax.swing.JLayeredPane.DRAG_LAYER);
        jDesktopPane1.setLayer(TFAB, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGap(182, 182, 182)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPeca, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                            .addComponent(txtT1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtT2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtT3))
                                        .addComponent(jLabel5))
                                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel3)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQtdNOK, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(TFAB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(CadasterPlus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jDesktopPane1Layout.createSequentialGroup()
                    .addGap(18, 18, 18)
                    .addComponent(jLabel9)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(txtRE, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(619, Short.MAX_VALUE)))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPeca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(txtQtdNOK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtT1)
                            .addComponent(txtT2)
                            .addComponent(txtT3))
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TFAB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(CadasterPlus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(8, Short.MAX_VALUE))
            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jDesktopPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(txtRE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(280, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TURNO1_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TURNO1_3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TURNO1_3ActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        //falta a porra do carimbo, OS TURNOS JÁ ESTÃO CORRETOS, E FALTA IDENTIFICAR SE É DA IN OU DA US (talvez vc pode tirar isso, ~não vai ser tão relevante, ja que no excel eles puxam isso de acordo com o problema, isso mesmo, TIRA ESSA PORRA)
        int peca = Integer.parseInt(txtPeca.getText());
        int qtd = Integer.parseInt(txtQtd.getText());


        int turno = 0;
        int turnoInsp1 = 0;
        int turnoInsp2 = 0;
        int turnoInsp3 = 0;
        int turnoInsp4 = 0;
        int turnoInsp5 = 0;
        //int carimbo = Integer.parseInt(txtCarimbo.getText());
        int re = Integer.parseInt(txtRE.getText());

        if (txtT1.isSelected()){
            turno = 1;
        }else if (txtT2.isSelected()){
            turno = 2;
        }else if(txtT3.isSelected()){
            turno = 3;
        }

        try{
            for(int i=0; i<1; i++){
                if("".equals(txtQTDNOK2.getText())){        //PRIMEIRO CAMPO
                    int QTD_NOK1 = Integer.parseInt(txtQTDNOK1.getText());
                    int PROBLEMA1 = Integer.parseInt(txtPROBLEMA1.getText());
                    
                    if (TURNO1_1.isSelected()){
                        turnoInsp1 = 1;
                    }else if (TURNO1_2.isSelected()){
                        turnoInsp1 = 2;
                    }else if(TURNO1_3.isSelected()){
                        turnoInsp1 = 3;
                    }else{
                        JOptionPane.showMessageDialog(null, "Selecione o Turno", "CS1", JOptionPane.WARNING_MESSAGE);
                        break;
                    }
                    int result = Integer.parseInt(txtQTDNOK1.getText());
                    int auxQtdNok = Integer.parseInt(txtQtdNOK.getText());
                    if (result != auxQtdNok){
                        JOptionPane.showMessageDialog(btnSalvar, "Quantidade total não é compativel");
                    }else{
                        cadastrar(peca, qtd, QTD_NOK1, PROBLEMA1, re, turno, turnoInsp1);
                        JOptionPane.showMessageDialog(btnSalvar, "Cadastrado!!");

                        CadasterPlus.setVisible(false);

                        txtPeca.setText("");
                        txtQtd.setText("");
                        txtQtdNOK.setText("");
                        grupoTurno.clearSelection();
                        txtQTDNOK1.setText("");
                        txtPROBLEMA1.setText("");
                        grp1.clearSelection();
                    }

                }else if("".equals(txtQTDNOK3.getText())){      //SEGUNDO CAMPO
                    int QTD_NOK1 = Integer.parseInt(txtQTDNOK1.getText());
                    int PROBLEMA1 = Integer.parseInt(txtPROBLEMA1.getText());
                    if (TURNO1_1.isSelected()){
                        turnoInsp1 = 1;
                    }else if (TURNO1_2.isSelected()){
                        turnoInsp1 = 2;
                    }else if(TURNO1_3.isSelected()){
                        turnoInsp1 = 3;
                    }else{
                        JOptionPane.showMessageDialog(null, "Selecione o Turno", "CS1", JOptionPane.WARNING_MESSAGE);
                        break;
                    }

                    //cadastrar(peca, qtd, QTD_NOK1, PROBLEMA1, re, turno, turnoInsp1);

                    int QTD_NOK2 = Integer.parseInt(txtQTDNOK2.getText());
                    int PROBLEMA2 = Integer.parseInt(txtPROBLEMA2.getText());
                    if (TURNO2_1.isSelected()){
                        turnoInsp2 = 1;
                    }else if (TURNO2_2.isSelected()){
                        turnoInsp2 = 2;
                    }else if(TURNO2_3.isSelected()){
                        turnoInsp2 = 3;
                    }else{
                        JOptionPane.showMessageDialog(null, "Selecione o Turno", "CS1", JOptionPane.WARNING_MESSAGE);
                        break;
                    }
                    //cadastrar(peca, 0, QTD_NOK2, PROBLEMA2, re, turno, turnoInsp2);

                    int result = Integer.parseInt(txtQTDNOK1.getText()) + Integer.parseInt(txtQTDNOK2.getText());
                    int auxQtdNok = Integer.parseInt(txtQtdNOK.getText());
                    if (result != auxQtdNok){
                        JOptionPane.showMessageDialog(btnSalvar, "Quantidade total não é compativel");
                    }else{
                        cadastrar(peca, qtd, QTD_NOK1, PROBLEMA1, re, turno, turnoInsp1);
                        cadastrar(peca, 0, QTD_NOK2, PROBLEMA2, re, turno, turnoInsp2);
                        JOptionPane.showMessageDialog(btnSalvar, "Cadastrado!!");

                        CadasterPlus.setVisible(false);

                        txtPeca.setText("");
                        txtQtd.setText("");
                        txtQtdNOK.setText("");
                        grupoTurno.clearSelection();
                        txtQTDNOK1.setText("");
                        txtQTDNOK2.setText("");
                        txtPROBLEMA1.setText("");
                        txtPROBLEMA2.setText("");
                        grp1.clearSelection();
                        grp2.clearSelection();
                    }

                }else if("".equals(txtQTDNOK4.getText())){
                    int QTD_NOK1 = Integer.parseInt(txtQTDNOK1.getText());
                    int PROBLEMA1 = Integer.parseInt(txtPROBLEMA1.getText());
                    if (TURNO1_1.isSelected()){
                        turnoInsp1 = 1;
                    }else if (TURNO1_2.isSelected()){
                        turnoInsp1 = 2;
                    }else if(TURNO1_3.isSelected()){
                        turnoInsp1 = 3;
                    }else{
                        JOptionPane.showMessageDialog(null, "Selecione o Turno", "CS1", JOptionPane.WARNING_MESSAGE);
                        break;
                    }
                    //cadastrar(peca, qtd, QTD_NOK1, PROBLEMA1, re, turno, turnoInsp1);

                    int QTD_NOK2 = Integer.parseInt(txtQTDNOK2.getText());
                    int PROBLEMA2 = Integer.parseInt(txtPROBLEMA2.getText());
                    if (TURNO2_1.isSelected()){
                        turnoInsp2 = 1;
                    }else if (TURNO2_2.isSelected()){
                        turnoInsp2 = 2;
                    }else if(TURNO2_3.isSelected()){
                        turnoInsp2 = 3;
                    }else{
                        JOptionPane.showMessageDialog(null, "Selecione o Turno", "CS1", JOptionPane.WARNING_MESSAGE);
                        break;
                    }
                    //cadastrar(peca, 0, QTD_NOK2, PROBLEMA2, re, turno, turnoInsp2);

                    int QTD_NOK3 = Integer.parseInt(txtQTDNOK3.getText());
                    int PROBLEMA3 = Integer.parseInt(txtPROBLEMA3.getText());
                    if (TURNO3_1.isSelected()){
                        turnoInsp3 = 1;
                    }else if (TURNO3_2.isSelected()){
                        turnoInsp3 = 2;
                    }else if(TURNO3_3.isSelected()){
                        turnoInsp3 = 3;
                    }else{
                        JOptionPane.showMessageDialog(null, "Selecione o Turno", "CS1", JOptionPane.WARNING_MESSAGE);
                        break;
                    }
                    //cadastrar(peca, 0, QTD_NOK3, PROBLEMA3, re, turno, turnoInsp3);

                    int result = Integer.parseInt(txtQTDNOK1.getText()) + Integer.parseInt(txtQTDNOK2.getText()) + Integer.parseInt(txtQTDNOK3.getText());
                    int auxQtdNok = Integer.parseInt(txtQtdNOK.getText());
                    if (result != auxQtdNok){
                        JOptionPane.showMessageDialog(btnSalvar, "Quantidade total não é compativel");
                    }else{
                        cadastrar(peca, qtd, QTD_NOK1, PROBLEMA1, re, turno, turnoInsp1);
                        cadastrar(peca, 0, QTD_NOK2, PROBLEMA2, re, turno, turnoInsp2);
                        cadastrar(peca, 0, QTD_NOK3, PROBLEMA3, re, turno, turnoInsp3);
                        JOptionPane.showMessageDialog(btnSalvar, "Cadastrado!!");

                        CadasterPlus.setVisible(false);

                        txtPeca.setText("");
                        txtQtd.setText("");
                        txtQtdNOK.setText("");
                        grupoTurno.clearSelection();
                        txtQTDNOK1.setText("");
                        txtQTDNOK2.setText("");
                        txtQTDNOK3.setText("");
                        txtPROBLEMA1.setText("");
                        txtPROBLEMA2.setText("");
                        txtPROBLEMA3.setText("");
                        grp1.clearSelection();
                        grp2.clearSelection();
                        grp3.clearSelection();
                    }

                }else if(("".equals(txtQTDNOK5.getText()))){
                    int QTD_NOK1 = Integer.parseInt(txtQTDNOK1.getText());
                    int PROBLEMA1 = Integer.parseInt(txtPROBLEMA1.getText());
                    if (TURNO1_1.isSelected()){
                        turnoInsp1 = 1;
                    }else if (TURNO1_2.isSelected()){
                        turnoInsp1 = 2;
                    }else if(TURNO1_3.isSelected()){
                        turnoInsp1 = 3;
                    }else{
                        JOptionPane.showMessageDialog(null, "Selecione o Turno", "CS1", JOptionPane.WARNING_MESSAGE);
                        break;
                    }
                    //cadastrar(peca, qtd, QTD_NOK1, PROBLEMA1, re, turno, turnoInsp1);

                    int QTD_NOK2 = Integer.parseInt(txtQTDNOK2.getText());
                    int PROBLEMA2 = Integer.parseInt(txtPROBLEMA2.getText());
                    if (TURNO2_1.isSelected()){
                        turnoInsp2 = 1;
                    }else if (TURNO2_2.isSelected()){
                        turnoInsp2 = 2;
                    }else if(TURNO2_3.isSelected()){
                        turnoInsp2 = 3;
                    }else{
                        JOptionPane.showMessageDialog(null, "Selecione o Turno", "CS1", JOptionPane.WARNING_MESSAGE);
                        break;
                    }
                    //cadastrar(peca, 0, QTD_NOK2, PROBLEMA2, re, turno, turnoInsp2);

                    int QTD_NOK3 = Integer.parseInt(txtQTDNOK3.getText());
                    int PROBLEMA3 = Integer.parseInt(txtPROBLEMA3.getText());
                    if (TURNO3_1.isSelected()){
                        turnoInsp3 = 1;
                    }else if (TURNO3_2.isSelected()){
                        turnoInsp3 = 2;
                    }else if(TURNO3_3.isSelected()){
                        turnoInsp3 = 3;
                    }else{
                        JOptionPane.showMessageDialog(null, "Selecione o Turno", "CS1", JOptionPane.WARNING_MESSAGE);
                        break;
                    }
                    //cadastrar(peca, 0, QTD_NOK3, PROBLEMA3, re, turno, turnoInsp3);

                    int QTD_NOK4 = Integer.parseInt(txtQTDNOK4.getText());
                    int PROBLEMA4 = Integer.parseInt(txtPROBLEMA4.getText());
                    if (TURNO4_1.isSelected()){
                        turnoInsp4 = 1;
                    }else if (TURNO4_2.isSelected()){
                        turnoInsp4 = 2;
                    }else if(TURNO4_3.isSelected()){
                        turnoInsp4 = 3;
                    }else{
                        JOptionPane.showMessageDialog(null, "Selecione o Turno", "CS1", JOptionPane.WARNING_MESSAGE);
                        break;
                    }
                    //cadastrar(peca, 0, QTD_NOK4, PROBLEMA4, re, turno, turnoInsp4);

                    int result = Integer.parseInt(txtQTDNOK1.getText()) + Integer.parseInt(txtQTDNOK2.getText()) + Integer.parseInt(txtQTDNOK3.getText()) + Integer.parseInt(txtQTDNOK4.getText());
                    int auxQtdNok = Integer.parseInt(txtQtdNOK.getText());
                    if (result != auxQtdNok){
                        JOptionPane.showMessageDialog(btnSalvar, "Quantidade total não é compativel");
                    }else{
                        cadastrar(peca, qtd, QTD_NOK1, PROBLEMA1, re, turno, turnoInsp1);
                        cadastrar(peca, 0, QTD_NOK2, PROBLEMA2, re, turno, turnoInsp2);
                        cadastrar(peca, 0, QTD_NOK3, PROBLEMA3, re, turno, turnoInsp3);
                        cadastrar(peca, 0, QTD_NOK4, PROBLEMA4, re, turno, turnoInsp4);
                        JOptionPane.showMessageDialog(btnSalvar, "Cadastrado!!");

                        CadasterPlus.setVisible(false);

                        txtPeca.setText("");
                        txtQtd.setText("");
                        txtQtdNOK.setText("");
                        grupoTurno.clearSelection();
                        txtQTDNOK1.setText("");
                        txtQTDNOK2.setText("");
                        txtQTDNOK3.setText("");
                        txtQTDNOK4.setText("");
                        txtPROBLEMA1.setText("");
                        txtPROBLEMA2.setText("");
                        txtPROBLEMA3.setText("");
                        txtPROBLEMA4.setText("");
                        grp1.clearSelection();
                        grp2.clearSelection();
                        grp3.clearSelection();
                        grp4.clearSelection();
                    }

                }else{
                    int QTD_NOK1 = Integer.parseInt(txtQTDNOK1.getText());
                    int PROBLEMA1 = Integer.parseInt(txtPROBLEMA1.getText());
                    if (TURNO1_1.isSelected()){
                        turnoInsp1 = 1;
                    }else if (TURNO1_2.isSelected()){
                        turnoInsp1 = 2;
                    }else if(TURNO1_3.isSelected()){
                        turnoInsp1 = 3;
                    }else{
                        JOptionPane.showMessageDialog(null, "Selecione o Turno", "CS1", JOptionPane.WARNING_MESSAGE);
                        break;
                    }
                    int QTD_NOK2 = Integer.parseInt(txtQTDNOK2.getText());
                    int PROBLEMA2 = Integer.parseInt(txtPROBLEMA2.getText());
                    if (TURNO2_1.isSelected()){
                        turnoInsp2 = 1;
                    }else if (TURNO2_2.isSelected()){
                        turnoInsp2 = 2;
                    }else if(TURNO2_3.isSelected()){
                        turnoInsp2 = 3;
                    }else{
                        JOptionPane.showMessageDialog(null, "Selecione o Turno", "CS1", JOptionPane.WARNING_MESSAGE);
                        break;
                    }
                    int QTD_NOK3 = Integer.parseInt(txtQTDNOK3.getText());
                    int PROBLEMA3 = Integer.parseInt(txtPROBLEMA3.getText());
                    if (TURNO3_1.isSelected()){
                        turnoInsp3 = 1;
                    }else if (TURNO3_2.isSelected()){
                        turnoInsp3 = 2;
                    }else if(TURNO3_3.isSelected()){
                        turnoInsp3 = 3;
                    }else{
                        JOptionPane.showMessageDialog(null, "Selecione o Turno", "CS1", JOptionPane.WARNING_MESSAGE);
                        break;
                    }
                    int QTD_NOK4 = Integer.parseInt(txtQTDNOK4.getText());
                    int PROBLEMA4 = Integer.parseInt(txtPROBLEMA4.getText());
                    if (TURNO4_1.isSelected()){
                        turnoInsp4 = 1;
                    }else if (TURNO4_2.isSelected()){
                        turnoInsp4 = 2;
                    }else if(TURNO4_3.isSelected()){
                        turnoInsp4 = 3;
                    }else{
                        JOptionPane.showMessageDialog(null, "Selecione o Turno", "CS1", JOptionPane.WARNING_MESSAGE);
                        break;
                    }
                    int QTD_NOK5 = Integer.parseInt(txtQTDNOK5.getText());
                    int PROBLEMA5 = Integer.parseInt(txtPROBLEMA5.getText());
                    if (TURNO5_1.isSelected()){
                        turnoInsp5 = 1;
                    }else if (TURNO5_2.isSelected()){
                        turnoInsp5 = 2;
                    }else if(TURNO5_3.isSelected()){
                        turnoInsp5 = 3;
                    }else{
                        JOptionPane.showMessageDialog(null, "Selecione o Turno", "CS1", JOptionPane.WARNING_MESSAGE);
                        break;
                    }

                    //                    cadastrar(peca, qtd, QTD_NOK1, PROBLEMA1, re, turno, turnoInsp1);
                    //                    cadastrar(peca, 0, QTD_NOK2, PROBLEMA2, re, turno, turnoInsp2);
                    //                    cadastrar(peca, 0, QTD_NOK3, PROBLEMA3, re, turno, turnoInsp3);
                    //                    cadastrar(peca, 0, QTD_NOK4, PROBLEMA4, re, turno, turnoInsp4);
                    //                    cadastrar(peca, 0, QTD_NOK5, PROBLEMA5, re, turno, turnoInsp5);

                    int result = Integer.parseInt(txtQTDNOK1.getText()) + Integer.parseInt(txtQTDNOK2.getText()) + Integer.parseInt(txtQTDNOK3.getText()) + Integer.parseInt(txtQTDNOK4.getText()) + Integer.parseInt(txtQTDNOK5.getText());
                    int auxQtdNok = Integer.parseInt(txtQtdNOK.getText());
                    if (result != auxQtdNok){
                        JOptionPane.showMessageDialog(btnSalvar, "Quantidade total não é compativel");
                    }else{
                        cadastrar(peca, qtd, QTD_NOK1, PROBLEMA1, re, turno, turnoInsp1);
                        cadastrar(peca, 0, QTD_NOK2, PROBLEMA2, re, turno, turnoInsp2);
                        cadastrar(peca, 0, QTD_NOK3, PROBLEMA3, re, turno, turnoInsp3);
                        cadastrar(peca, 0, QTD_NOK4, PROBLEMA4, re, turno, turnoInsp4);
                        cadastrar(peca, 0, QTD_NOK5, PROBLEMA5, re, turno, turnoInsp5);
                        JOptionPane.showMessageDialog(btnSalvar, "Cadastrado!!");

                        CadasterPlus.setVisible(false);

                        txtPeca.setText("");
                        txtQtd.setText("");
                        txtQtdNOK.setText("");
                        grupoTurno.clearSelection();
                        txtQTDNOK1.setText("");
                        txtQTDNOK2.setText("");
                        txtQTDNOK3.setText("");
                        txtQTDNOK4.setText("");
                        txtQTDNOK5.setText("");
                        txtPROBLEMA1.setText("");
                        txtPROBLEMA2.setText("");
                        txtPROBLEMA3.setText("");
                        txtPROBLEMA4.setText("");
                        txtPROBLEMA5.setText("");
                        grp1.clearSelection();
                        grp2.clearSelection();
                        grp3.clearSelection();
                        grp4.clearSelection();
                        grp5.clearSelection();
                    }
                }

            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(btnSalvar, "ERRO:Complete os campos corretamente", "Erro"+e, JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnOKActionPerformed

    private void txtQtdNOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtdNOKActionPerformed

    }//GEN-LAST:event_txtQtdNOKActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed

        int peca = Integer.parseInt(txtPeca.getText());
        int qtd = Integer.parseInt(txtQtd.getText());
        //int qtdNOK = Integer.parseInt(txtQtdNOK.getText());
        int turno = 0;
        //String problema = "";
        int re = Integer.parseInt(txtRE.getText());
        

        
        for (int i=0; i<1; i++){
            
            if (peca < 2000 || peca > 3000){
                JOptionPane.showMessageDialog(null, "Digite um valor válido para o PN", "CS1", JOptionPane.WARNING_MESSAGE);
                break;
            }
            


            if("".equals(txtQtdNOK.getText())){
                TFAB.setVisible(true);////////////////////////////////////////////////////////////////////////////
                
//                int resultado = cadastrar(peca, qtd, 0, 0, re, turno, 0);
//                System.out.println("Resultado: "+resultado);
//                if (resultado==1)
//                {
//                    JOptionPane.showMessageDialog(btnSalvar, "a Peça "+peca+" foi inserida");
//                }else{
//                    JOptionPane.showMessageDialog(btnSalvar, "Ocorreram problemas ao salvar o registro");
//                }
//                txtPeca.setText("");
//                txtQtd.setText("");
//                txtQtdNOK.setText("");
//                grupoTurno.clearSelection();

            }else if("0".equals(txtQtdNOK.getText())){
                TFAB.setVisible(true);
//                int resultado = cadastrar(peca, qtd, 0, 0, re, turno, 0);
//                System.out.println("Resultado: "+resultado);
//                if (resultado==1)
//                {
//                    JOptionPane.showMessageDialog(btnSalvar, "a Peça "+peca+" foi inserida");
//                }else{
//                    JOptionPane.showMessageDialog(btnSalvar, "Ocorreram problemas ao salvar o registro");
//                }
//                txtPeca.setText("");
//                txtQtd.setText("");
//                txtQtdNOK.setText("");
//                grupoTurno.clearSelection();
            }
            else{
                CadasterPlus.setVisible(true);
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void txtPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPecaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPecaActionPerformed

    private void txtREActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtREActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtREActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int peca = Integer.parseInt(txtPeca.getText());
        int qtd = Integer.parseInt(txtQtd.getText());
        //int qtdNOK = Integer.parseInt(txtQtdNOK.getText());
        int turno = 0;
        int turnoF = 0;
        //String problema = "";
        int re = Integer.parseInt(txtRE.getText());

        
        for(int i=0; i<1; i++){
            if (txtT1.isSelected()){
                turno = 1;
            }else if (txtT2.isSelected()){
                turno = 2;
            }else if(txtT3.isSelected()){
                turno = 3;
            }else{
                JOptionPane.showMessageDialog(null, "Selecione o Turno", "CS1", JOptionPane.WARNING_MESSAGE);
                break;
            }
            
            
            
            if (t1.isSelected()){
                turnoF = 1;
            }else if (t2.isSelected()){
                turnoF = 2;
            }else if(t3.isSelected()){
                turnoF = 3;
            }else{
                JOptionPane.showMessageDialog(null, "Selecione o Turno em que a peça foi fabricada!!", "CS1", JOptionPane.WARNING_MESSAGE);
                break;
            }
        
        
        
        int resultado = cadastrar(peca, qtd, 0, 0, re, turno, turnoF);
        System.out.println("Resultado: "+resultado);
        if (resultado==1)
        {
            JOptionPane.showMessageDialog(btnSalvar, "a Peça "+peca+" foi inserida");
        }else{
            JOptionPane.showMessageDialog(btnSalvar, "Ocorreram problemas ao salvar o registro");
        }
        txtPeca.setText("");
        txtQtd.setText("");
        txtQtdNOK.setText("");
        grupoTurnoF.clearSelection();
        TFAB.setVisible(false);

        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame CadasterPlus;
    private javax.swing.JInternalFrame TFAB;
    private javax.swing.JRadioButton TURNO1_1;
    private javax.swing.JRadioButton TURNO1_2;
    private javax.swing.JRadioButton TURNO1_3;
    private javax.swing.JRadioButton TURNO2_1;
    private javax.swing.JRadioButton TURNO2_2;
    private javax.swing.JRadioButton TURNO2_3;
    private javax.swing.JRadioButton TURNO3_1;
    private javax.swing.JRadioButton TURNO3_2;
    private javax.swing.JRadioButton TURNO3_3;
    private javax.swing.JRadioButton TURNO4_1;
    private javax.swing.JRadioButton TURNO4_2;
    private javax.swing.JRadioButton TURNO4_3;
    private javax.swing.JRadioButton TURNO5_1;
    private javax.swing.JRadioButton TURNO5_2;
    private javax.swing.JRadioButton TURNO5_3;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnSalvar;
    private javax.swing.ButtonGroup grp1;
    private javax.swing.ButtonGroup grp2;
    private javax.swing.ButtonGroup grp3;
    private javax.swing.ButtonGroup grp4;
    private javax.swing.ButtonGroup grp5;
    private javax.swing.ButtonGroup grupoProblema;
    private javax.swing.ButtonGroup grupoTurno;
    private javax.swing.ButtonGroup grupoTurnoF;
    private javax.swing.JButton jButton1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton t1;
    private javax.swing.JRadioButton t2;
    private javax.swing.JRadioButton t3;
    private javax.swing.JTextField txtPROBLEMA1;
    private javax.swing.JTextField txtPROBLEMA2;
    private javax.swing.JTextField txtPROBLEMA3;
    private javax.swing.JTextField txtPROBLEMA4;
    private javax.swing.JTextField txtPROBLEMA5;
    private javax.swing.JTextField txtPeca;
    private javax.swing.JTextField txtQTDNOK1;
    private javax.swing.JTextField txtQTDNOK2;
    private javax.swing.JTextField txtQTDNOK3;
    private javax.swing.JTextField txtQTDNOK4;
    private javax.swing.JTextField txtQTDNOK5;
    private javax.swing.JTextField txtQtd;
    private javax.swing.JTextField txtQtdNOK;
    private javax.swing.JTextField txtRE;
    private javax.swing.JRadioButton txtT1;
    private javax.swing.JRadioButton txtT2;
    private javax.swing.JRadioButton txtT3;
    // End of variables declaration//GEN-END:variables
}


//take a snapshot - colocar código no botão de snapshot
//int returnVal = jFileChooser1.showSaveDialog(this);
//if (returnVal == JFileChooser.APPROVE_OPTION){
//    File file = jFileChooser1.getSelectedFile(); //get the path from save dialog
//    Highgui.imwrite(file.getPath(), frame);   //save frame -image- to this path
//}else{
//    System.out.println("File access cancelled by user.");
//}